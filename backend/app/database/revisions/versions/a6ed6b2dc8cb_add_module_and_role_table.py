"""add module and role table

Revision ID: a6ed6b2dc8cb
Revises: 5153f1a3b3a3
Create Date: 2025-08-05 19:08:42.981352

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from app.database.modules_and_roles import get_avlokan_module_names, get_avlokan_roles


# revision identifiers, used by Alembic.
revision: str = 'a6ed6b2dc8cb'
down_revision: Union[str, None] = '5153f1a3b3a3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('modules',
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('roles',
    sa.Column('module_name', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['module_name'], ['modules.name'], ),
    sa.PrimaryKeyConstraint('module_name', 'name')
    )

    connection = op.get_bind()

    modules = get_avlokan_module_names()
    role_data = get_avlokan_roles()
    
    # Add modules
    for module_name in modules.values():
        connection.execute(
            sa.text("INSERT INTO modules (name) VALUES (:name)"),
            {'name': module_name}
        )

    for module_name, role_list in role_data.items():
        for role_name in role_list:
            connection.execute(
                sa.text("INSERT INTO roles (module_name, name) VALUES (:module_name, :name)"),
                {'module_name': module_name, 'name': role_name}
            )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('roles')
    op.drop_table('modules')
    # ### end Alembic commands ###
